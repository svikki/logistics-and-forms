# Generated by Django 2.0 on 2018-01-11 09:03

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Jobsheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nature', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle_No', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('JobSheet_No_List', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Office_list', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Type', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('In_Date', models.DateField()),
                ('Expt_Date', models.DateField()),
                ('Jobsheet_no', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Completion_Date', models.DateField()),
                ('Vehicle', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Out_Date', models.DateField()),
                ('Trailor', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('KM_Reading', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Driver', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Additional_KM', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Owner', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Tyre_Supervisor', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Maintenance_Supervisor', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Total_KM_Run', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Remark', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('pendding_Remark', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Store', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Close_Date', models.DateField()),
                ('JobSheet_No_List1', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='JobSheet No List')),
                ('InDate', models.DateField()),
                ('OutDate', models.DateField()),
                ('KM_Reading1', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='KM Reading')),
                ('Remarks', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Completion_Remarks', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Check_list_Template', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='Jobsheet_trace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('From_Date', models.DateField()),
                ('To_Date', models.DateField()),
                ('JobSheet_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='OMR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vehicle_No', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('OMR_No_List', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Office_list', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Date', models.DateField()),
                ('OMR_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('ORM_Type', models.CharField(choices=[('Item1', 'Item1'), ('Item2', 'Item2')], max_length=100)),
                ('Spare_Group', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Completion_Date', models.DateField()),
                ('ORM_Nature', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle_No1', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Vehicle No')),
                ('Driver', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Place', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Supervisor', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('On_Road_Date', models.DateField()),
                ('Trip_Detail', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Approx_Amount', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Remarks', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Comment', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Varification_Date', models.DateField()),
                ('Verified_By', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Varification_Remarks', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='Part_Tracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(choices=[('Item1', 'Item1'), ('Item2', 'Item2')], max_length=100)),
                ('SNo', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Doc_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Doc_Date', models.DateField()),
                ('CR_AC', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('DR_AC', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Status', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Trail_Status', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Card_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Life', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('S', models.BooleanField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('KM_Reading', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('KM_Run', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Purchase_Cost', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('TP_Coast', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Scrap_Cost', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Est_Cost', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Reason', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='PM_Chart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SNo', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Date', models.DateField()),
                ('Inactive_Date', models.DateField()),
                ('Class_Name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('PM_Name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Days', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('KM_Run', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('KM_Alert', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Map_Next_PM', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Remark', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='PM_Master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Preventive_list', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Preventive_Name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Spare_Group', models.CharField(choices=[('Item1', 'Item1'), ('Item2', 'Item2')], max_length=100)),
                ('Nature', models.CharField(choices=[('Item1', 'Item1'), ('Item2', 'Item2')], max_length=100)),
                ('Description', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='Repair_Consume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nature', models.CharField(choices=[('Item1', 'Item1'), ('Item2', 'Item2')], max_length=100)),
                ('Vehicle_No1', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Vehicle No')),
                ('Supplier', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Consume_Search', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Office', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Supplier1', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Supplier')),
                ('PO_Type', models.CharField(choices=[('Item1', 'Item1'), ('Item2', 'Item2')], max_length=100)),
                ('Narration', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Document_Date', models.DateField()),
                ('Voucher_Date', models.DateField()),
                ('Document_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vendor_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Expense_AC', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Ref', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Ref / PONo')),
                ('Labour_Code', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Labour_Qty', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Labour_Rate', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Labour_Amount', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('DoneBy', models.CharField(choices=[('Item1', 'Item1'), ('Item2', 'Item2')], max_length=100)),
                ('Labour_Remark', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='Repair_Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Office', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Jobsheet_no', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('InDate', models.DateField()),
                ('Expected_Date', models.DateField()),
                ('Vehicle_No1', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Vehicle No')),
                ('Driver_Name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Supervisor_Name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('OutDate', models.DateField()),
            ],
        ),
    ]
